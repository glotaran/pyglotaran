name: "Run Examples"

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  run-examples:
    name: "Run Example: "
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example_name:
          [
            quick-start,
            fluorescence,
            transient-absorption,
            transient-absorption-two-datasets,
            spectral-constraints,
            spectral-guidance,
            two-datasets,
            sim-3d-disp,
            sim-3d-nodisp,
            sim-3d-weight,
            sim-6d-disp,
          ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install pyglotaran
        run: |
          pip install wheel
          pip install .
      - name: ${{ matrix.example_name }}
        id: example-run
        uses: glotaran/pyglotaran-examples@main
        with:
          example_name: ${{ matrix.example_name }}
      - name: Upload Example Plots Artifact
        uses: actions/upload-artifact@v2
        with:
          name: example-plots
          path: ${{ steps.example-run.outputs.plots-path }}

      - name: Upload Example Results
        uses: actions/upload-artifact@v2
        with:
          name: example-results
          path: ~/pyglotaran_examples_results

  compare-results:
    name: Compare Results
    runs-on: ubuntu-latest
    needs: [run-examples]
    steps:
      - name: Checkout glotaran
        uses: actions/checkout@v2

      - name: Checkout compare results
        uses: actions/checkout@v2
        with:
          repository: "glotaran/pyglotaran-examples"
          ref: comparison-results
          path: comparison-results

      - name: Download result artifact
        uses: actions/download-artifact@v2
        with:
          name: example-results
          path: comparison-results-current

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install xarray pytest netCDF4

      - name: Compare Results
        run: |
          python -m pytest .github/test_result_consistency.py -vv
